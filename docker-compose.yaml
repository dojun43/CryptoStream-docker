x-crptostream-common:
  &crptostream-common
  image: python:3.11
  restart: always
  env_file:
      - .env
  volumes:
    - ${CRPTOSTREAM_PROJ_DIR:-.}/conf:/CryptoStream/conf
    - ${CRPTOSTREAM_PROJ_DIR:-.}/src:/CryptoStream/src
    - ${CRPTOSTREAM_PROJ_DIR:-.}/logs:/CryptoStream/logs
    - ${CRPTOSTREAM_PROJ_DIR:-.}/private:/CryptoStream/private
  working_dir: /CryptoStream

services:
  postgres:
    image: postgres:13
    container_name: postgres
    user: "1000"
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: cryptostream
      TZ: Asia/Seoul
    volumes:
      - /data/postgresql/data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${POSTGRES_USER}", "-d", "cryptostream"]
      interval: 10s
      retries: 5
      start_period: 5s
    restart: always
    ports:
      - 5432:5432
    networks:
      network_custom:
        ipv4_address: 172.28.0.2

  upbit_producer1:
    <<: *crptostream-common
    container_name: upbit_producer1
    command: >
      bash -c "
      python -m venv /venv &&
      /venv/bin/pip install -r /CryptoStream/src/requirements.txt && 
      /venv/bin/python /CryptoStream/src/upbit/upbit_producer.py upbit_producer1"
    networks:
      network_custom:
        ipv4_address: 172.28.0.3

  upbit_producer2:
    <<: *crptostream-common
    container_name: upbit_producer2
    command: >
      bash -c "
      python -m venv /venv &&
      /venv/bin/pip install -r /CryptoStream/src/requirements.txt && 
      /venv/bin/python /CryptoStream/src/upbit/upbit_producer.py upbit_producer2"
    networks:
      network_custom:
        ipv4_address: 172.28.0.4
  
  upbit_producer3:
    <<: *crptostream-common
    container_name: upbit_producer3
    command: >
      bash -c "
      python -m venv /venv &&
      /venv/bin/pip install -r /CryptoStream/src/requirements.txt && 
      /venv/bin/python /CryptoStream/src/upbit/upbit_producer.py upbit_producer3"
    networks:
      network_custom:
        ipv4_address: 172.28.0.5

  gcs_consumer1:
    <<: *crptostream-common
    container_name: gcs_consumer1
    command: >
      bash -c "
      python -m venv /venv &&
      /venv/bin/pip install -r /CryptoStream/src/requirements.txt && 
      /venv/bin/python /CryptoStream/src/gcs/gcs_consumer.py gcs_consumer1"
    networks:
      network_custom:
          ipv4_address: 172.28.0.6

  gcs_consumer2:
    <<: *crptostream-common
    container_name: gcs_consumer2
    command: >
      bash -c "
      python -m venv /venv &&
      /venv/bin/pip install -r /CryptoStream/src/requirements.txt && 
      /venv/bin/python /CryptoStream/src/gcs/gcs_consumer.py gcs_consumer2"
    networks:
      network_custom:
          ipv4_address: 172.28.0.7

  gcs_consumer3:
    <<: *crptostream-common
    container_name: gcs_consumer3
    command: >
      bash -c "
      python -m venv /venv &&
      /venv/bin/pip install -r /CryptoStream/src/requirements.txt && 
      /venv/bin/python /CryptoStream/src/gcs/gcs_consumer.py gcs_consumer3"
    networks:
      network_custom:
          ipv4_address: 172.28.0.8

networks:
  network_custom:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.28.0.0/16
          gateway: 172.28.0.1